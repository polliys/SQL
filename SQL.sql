/*ЗАДАНИЕ: Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. Информацию отсортировать по названию книги в алфавитном порядке*/

SELECT title, author
FROM book
WHERE title LIKE "_% _%"
AND author LIKE "%С.%"
ORDER BY title;

/*ЗАДАНИЕ: Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.*/

SELECT author AS Автор, COUNT(title) AS Различных_книг, SUM(amount) AS Количество_экземпляров 
FROM book
GROUP BY author;

/*ЗАДАНИЕ: Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.*/
SELECT author, 
        MIN(price) AS Минимальная_цена, 
        MAX(price) AS Максимальная_цена, 
        AVG(price) AS Средняя_цена
FROM book
GROUP BY author;

/*ЗАДАНИЕ: Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него.*/

SELECT author, 
	SUM(price*amount) AS Стоимость, 
	ROUND (SUM(price*amount/1.18*0.18),2) AS НДС, 
	ROUND (SUM(price*amount/1.18),2) AS Стоимость_без_НДС --Для каждого вычисления ставим отдельный ROUND. В числах вместо запятой ставим точку.--
FROM book
GROUP BY author;

/*ЗАДАНИЕ: Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой. (Пояснение. В задании нужно посчитать среднюю цену уникальных книг на складе, а не среднюю цену всех экземпляров книг)*/

SELECT DISTINCT MIN(price) AS Минимальная_цена, 
        MAX(price) AS Максимальная_цена,
        ROUND (AVG(price),2) AS Средняя_цена
FROM book;

/*ЗАДАНИЕ: Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.*/

SELECT 
	ROUND (AVG(price),2) AS Средняя_цена, 
	ROUND (SUM(price*amount),2) AS Стоимость
FROM book
WHERE amount BETWEEN 5 AND 14;

/*ЗАДАНИЕ: Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.*/

SELECT author,
SUM(price*amount) AS Стоимость
FROM book
WHERE title NOT IN ("Идиот", "Белая гвардия")
GROUP BY author
HAVING SUM(price*amount) > 5000
ORDER BY SUM(price*amount) DESC;

/*ЗАДАНИЕ: Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.*/

SELECT author, title, price
FROM book
WHERE price <= ( 
    SELECT AVG(price)
    FROM book)
ORDER BY price DESC;

/*ЗАДАНИЕ: Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.*/

SELECT author, title, price
FROM book
WHERE (price - (SELECT MIN(price) FROM book)) <=150 
ORDER BY price ASC;

/*ЗАДАНИЕ:Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.*/

SELECT author, title, amount
FROM book
WHERE amount IN (
    SELECT amount
    FROM book
    Group by amount
    having count(amount)=1);
	
/*ЗАДАНИЕ: Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.*/

SELECT author, title, price
FROM book
WHERE price < ANY ( 
    SELECT MIN(price)
    FROM book
    GROUP BY author);

 /*ЗАДАНИЕ: Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.*/
 
SELECT title, author, amount,
    ((SELECT MAX(amount) FROM book) - amount) AS Заказ
FROM book
WHERE amount < (select max(amount) from book);

/*ЗАДАНИЕ: Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.*/

insert book (title, author, price, amount)
select title, author, price, amount
from supply
where author not in ('Булгаков М.А.', 'Достоевский Ф.М.'); 

/*ЗАДАНИЕ: Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.*/

insert book (title, author, price, amount)
select title, author, price, amount
from supply
where author not in (
    select author
    from book);
	
/*ЗАДАНИЕ: Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10, включая границы.*/

update book
set price = price * 0.9
where amount between 5 and 10;

/*ЗАДАНИЕ: В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало количество экземпляров книг, указанных в столбце amount. А цену тех книг, которые покупатель не заказывал, снизить на 10%.*/
update book
set buy = if(buy > amount, amount, buy), --установить buy = ЕСЛИ(заказ > кол-ва_на_складе,  value_if_TRUE,  value_if_FALSE)--
    price = if(buy = 0, price * 0.9, price * 1);
	
/*ЗАДАНИЕ: Для тех книг в таблице book , которые есть в таблице supply, не только увеличить их количество в таблице book ( увеличить их количество на значение столбца amountтаблицы supply), но и пересчитать их цену (для каждой книги найти сумму цен из таблиц book и supply и разделить на 2).*/

update book, supply
set book.amount = book.amount + supply.amount,
    book.price = (book.price + supply.price)/2 -- не ставить запятые перед ключевыми словами--
where book.title = supply.title and book.author = supply.author;

/*ЗАДАНИЕ: Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.*/

delete from supply
where author in (
    select author
    from book
    group by author
    having sum(amount) > 10);
	
/*ЗАДАНИЕ: Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде. В результат включить столбцы name, city, per_diem, date_first, date_last.*/

select name, city, per_diem, date_first, date_last
from trip
where name like '%а %' 
order by date_last desc; 

/*ЗАДАНИЕ: Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве. (В условии задачи опущенно, но требуется вывести уникальные имена.)*/

select distinct name
from trip
where city = 'Москва'
order by name asc;


/*ЗАДАНИЕ: Для каждого города посчитать, сколько раз сотрудники в нем были.  Информацию вывести в отсортированном в алфавитном порядке по названию городов. Вычисляемый столбец назвать Количество.*/

select city, count(name) as Количество 
from trip
group by city 
order by city asc;

 /*ЗАДАНИЕ: Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга (фамилии и инициалы сотрудников, город ,  длительность командировки в днях, при этом первый и последний день относится к периоду командировки). Последний столбец назвать Длительность. Информацию вывести в упорядоченном по убыванию длительности поездки, а потом по убыванию названий городов (в обратном алфавитном порядке).*/
 
select name, city, (DATEDIFF(date_last, date_first)+1) as Длительность 
from trip
where city not in("Москва", "Санкт-Петербург")
order by Длительность desc, city desc;

/*ЗАДАНИЕ: Вывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.*/

select title, name_genre, price
from book inner join genre
     on book.genre_id = genre.genre_id
where amount > 8
order by price desc;

/* ЗАДАНИЕ: Вывести все жанры, которые не представлены в книгах на складе.*/

select name_genre
from genre left join book
    on genre.genre_id = book.genre_id
where book.genre_id is null

/* ЗАДАНИЕ: Посчитать количество экземпляров  книг каждого автора из таблицы author.  Вывести тех авторов,  количество книг которых меньше 10, в отсортированном по возрастанию количества виде. Последний столбец назвать Количество.*/

select name_author, sum(amount) as Количество
from author left join book 
    on author.author_id = book.author_id
group by name_author
having Количество < 10 or count(title) = 0
order by Количество asc;

/* ЗАДАНИЕ: Вывести в алфавитном порядке всех авторов, которые пишут только в одном жанре. Поскольку у нас в таблицах так занесены данные, что у каждого автора книги только в одном жанре,  для этого запроса внесем изменения в таблицу book. Пусть у нас  книга Есенина «Черный человек» относится к жанру «Роман», а книга Булгакова «Белая гвардия» к «Приключениям» (эти изменения в таблицы уже внесены).*/

select name_author
from author inner join book 
    on author.author_id = book.author_id
    inner join genre
    on genre.genre_id = book.genre_id
group by name_author
having count(distinct name_genre) = 1
order by name_author asc;

/*ЗАДАНИЕ: Если в таблицах supply  и book есть одинаковые книги, которые имеют равную цену,  вывести их название и автора, а также посчитать общее количество экземпляров книг в таблицах supply и book,  столбцы назвать Название, Автор  и Количество.*/

select title as Название, author as Автор , book.amount + supply.amount AS Количество
from supply join book using(title)
    join author on book.author_id = author.author_id
where book.price = supply.price;